{"mappings":"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","sources":["<anon>","src/index.ts","node_modules/reconnecting-websocket/dist/reconnecting-websocket-mjs.js"],"sourcesContent":["(() => {\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */ /* global Reflect, Promise */ var $07f9bef39fe6830c$var$extendStatics = function(d, b) {\n    $07f9bef39fe6830c$var$extendStatics = Object.setPrototypeOf || ({\n        __proto__: []\n    }) instanceof Array && function(d, b) {\n        d.__proto__ = b;\n    } || function(d, b) {\n        for(var p in b)if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return $07f9bef39fe6830c$var$extendStatics(d, b);\n};\nfunction $07f9bef39fe6830c$var$__extends(d, b) {\n    $07f9bef39fe6830c$var$extendStatics(d, b);\n    function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\nfunction $07f9bef39fe6830c$var$__values(o) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\n    if (m) return m.call(o);\n    return {\n        next: function() {\n            if (o && i >= o.length) o = void 0;\n            return {\n                value: o && o[i++],\n                done: !o\n            };\n        }\n    };\n}\nfunction $07f9bef39fe6830c$var$__read(o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while((n === void 0 || n-- > 0) && !(r = i.next()).done)ar.push(r.value);\n    } catch (error) {\n        e = {\n            error: error\n        };\n    } finally{\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        } finally{\n            if (e) throw e.error;\n        }\n    }\n    return ar;\n}\nfunction $07f9bef39fe6830c$var$__spread() {\n    for(var ar = [], i = 0; i < arguments.length; i++)ar = ar.concat($07f9bef39fe6830c$var$__read(arguments[i]));\n    return ar;\n}\nvar $07f9bef39fe6830c$var$Event = /** @class */ function() {\n    function Event(type, target) {\n        this.target = target;\n        this.type = type;\n    }\n    return Event;\n}();\nvar $07f9bef39fe6830c$var$ErrorEvent = /** @class */ function(_super) {\n    $07f9bef39fe6830c$var$__extends(ErrorEvent, _super);\n    function ErrorEvent(error, target) {\n        var _this = _super.call(this, \"error\", target) || this;\n        _this.message = error.message;\n        _this.error = error;\n        return _this;\n    }\n    return ErrorEvent;\n}($07f9bef39fe6830c$var$Event);\nvar $07f9bef39fe6830c$var$CloseEvent = /** @class */ function(_super) {\n    $07f9bef39fe6830c$var$__extends(CloseEvent, _super);\n    function CloseEvent(code, reason, target) {\n        if (code === void 0) code = 1000;\n        if (reason === void 0) reason = \"\";\n        var _this = _super.call(this, \"close\", target) || this;\n        _this.wasClean = true;\n        _this.code = code;\n        _this.reason = reason;\n        return _this;\n    }\n    return CloseEvent;\n}($07f9bef39fe6830c$var$Event);\n/*!\r\n * Reconnecting WebSocket\r\n * by Pedro Ladaria <pedro.ladaria@gmail.com>\r\n * https://github.com/pladaria/reconnecting-websocket\r\n * License MIT\r\n */ var $07f9bef39fe6830c$var$getGlobalWebSocket = function() {\n    if (typeof WebSocket !== \"undefined\") // @ts-ignore\n    return WebSocket;\n};\n/**\r\n * Returns true if given argument looks like a WebSocket class\r\n */ var $07f9bef39fe6830c$var$isWebSocket = function(w) {\n    return typeof w !== \"undefined\" && !!w && w.CLOSING === 2;\n};\nvar $07f9bef39fe6830c$var$DEFAULT = {\n    maxReconnectionDelay: 10000,\n    minReconnectionDelay: 1000 + Math.random() * 4000,\n    minUptime: 5000,\n    reconnectionDelayGrowFactor: 1.3,\n    connectionTimeout: 4000,\n    maxRetries: Infinity,\n    maxEnqueuedMessages: Infinity,\n    startClosed: false,\n    debug: false\n};\nvar $07f9bef39fe6830c$var$ReconnectingWebSocket = /** @class */ function() {\n    function ReconnectingWebSocket(url, protocols, options) {\n        var _this = this;\n        if (options === void 0) options = {};\n        this._listeners = {\n            error: [],\n            message: [],\n            open: [],\n            close: []\n        };\n        this._retryCount = -1;\n        this._shouldReconnect = true;\n        this._connectLock = false;\n        this._binaryType = \"blob\";\n        this._closeCalled = false;\n        this._messageQueue = [];\n        /**\r\n         * An event listener to be called when the WebSocket connection's readyState changes to CLOSED\r\n         */ this.onclose = null;\n        /**\r\n         * An event listener to be called when an error occurs\r\n         */ this.onerror = null;\n        /**\r\n         * An event listener to be called when a message is received from the server\r\n         */ this.onmessage = null;\n        /**\r\n         * An event listener to be called when the WebSocket connection's readyState changes to OPEN;\r\n         * this indicates that the connection is ready to send and receive data\r\n         */ this.onopen = null;\n        this._handleOpen = function(event) {\n            _this._debug(\"open event\");\n            var _a = _this._options.minUptime, minUptime = _a === void 0 ? $07f9bef39fe6830c$var$DEFAULT.minUptime : _a;\n            clearTimeout(_this._connectTimeout);\n            _this._uptimeTimeout = setTimeout(function() {\n                return _this._acceptOpen();\n            }, minUptime);\n            _this._ws.binaryType = _this._binaryType;\n            // send enqueued messages (messages sent before websocket open event)\n            _this._messageQueue.forEach(function(message) {\n                return _this._ws.send(message);\n            });\n            _this._messageQueue = [];\n            if (_this.onopen) _this.onopen(event);\n            _this._listeners.open.forEach(function(listener) {\n                return _this._callEventListener(event, listener);\n            });\n        };\n        this._handleMessage = function(event) {\n            _this._debug(\"message event\");\n            if (_this.onmessage) _this.onmessage(event);\n            _this._listeners.message.forEach(function(listener) {\n                return _this._callEventListener(event, listener);\n            });\n        };\n        this._handleError = function(event) {\n            _this._debug(\"error event\", event.message);\n            _this._disconnect(undefined, event.message === \"TIMEOUT\" ? \"timeout\" : undefined);\n            if (_this.onerror) _this.onerror(event);\n            _this._debug(\"exec error listeners\");\n            _this._listeners.error.forEach(function(listener) {\n                return _this._callEventListener(event, listener);\n            });\n            _this._connect();\n        };\n        this._handleClose = function(event) {\n            _this._debug(\"close event\");\n            _this._clearTimeouts();\n            if (_this._shouldReconnect) _this._connect();\n            if (_this.onclose) _this.onclose(event);\n            _this._listeners.close.forEach(function(listener) {\n                return _this._callEventListener(event, listener);\n            });\n        };\n        this._url = url;\n        this._protocols = protocols;\n        this._options = options;\n        if (this._options.startClosed) this._shouldReconnect = false;\n        this._connect();\n    }\n    Object.defineProperty(ReconnectingWebSocket, \"CONNECTING\", {\n        get: function() {\n            return 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ReconnectingWebSocket, \"OPEN\", {\n        get: function() {\n            return 1;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ReconnectingWebSocket, \"CLOSING\", {\n        get: function() {\n            return 2;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ReconnectingWebSocket, \"CLOSED\", {\n        get: function() {\n            return 3;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"CONNECTING\", {\n        get: function() {\n            return ReconnectingWebSocket.CONNECTING;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"OPEN\", {\n        get: function() {\n            return ReconnectingWebSocket.OPEN;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"CLOSING\", {\n        get: function() {\n            return ReconnectingWebSocket.CLOSING;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"CLOSED\", {\n        get: function() {\n            return ReconnectingWebSocket.CLOSED;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"binaryType\", {\n        get: function() {\n            return this._ws ? this._ws.binaryType : this._binaryType;\n        },\n        set: function(value) {\n            this._binaryType = value;\n            if (this._ws) this._ws.binaryType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"retryCount\", {\n        /**\r\n         * Returns the number or connection retries\r\n         */ get: function() {\n            return Math.max(this._retryCount, 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"bufferedAmount\", {\n        /**\r\n         * The number of bytes of data that have been queued using calls to send() but not yet\r\n         * transmitted to the network. This value resets to zero once all queued data has been sent.\r\n         * This value does not reset to zero when the connection is closed; if you keep calling send(),\r\n         * this will continue to climb. Read only\r\n         */ get: function() {\n            var bytes = this._messageQueue.reduce(function(acc, message) {\n                if (typeof message === \"string\") acc += message.length; // not byte size\n                else if (message instanceof Blob) acc += message.size;\n                else acc += message.byteLength;\n                return acc;\n            }, 0);\n            return bytes + (this._ws ? this._ws.bufferedAmount : 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"extensions\", {\n        /**\r\n         * The extensions selected by the server. This is currently only the empty string or a list of\r\n         * extensions as negotiated by the connection\r\n         */ get: function() {\n            return this._ws ? this._ws.extensions : \"\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"protocol\", {\n        /**\r\n         * A string indicating the name of the sub-protocol the server selected;\r\n         * this will be one of the strings specified in the protocols parameter when creating the\r\n         * WebSocket object\r\n         */ get: function() {\n            return this._ws ? this._ws.protocol : \"\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"readyState\", {\n        /**\r\n         * The current state of the connection; this is one of the Ready state constants\r\n         */ get: function() {\n            if (this._ws) return this._ws.readyState;\n            return this._options.startClosed ? ReconnectingWebSocket.CLOSED : ReconnectingWebSocket.CONNECTING;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"url\", {\n        /**\r\n         * The URL as resolved by the constructor\r\n         */ get: function() {\n            return this._ws ? this._ws.url : \"\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\r\n     * Closes the WebSocket connection or connection attempt, if any. If the connection is already\r\n     * CLOSED, this method does nothing\r\n     */ ReconnectingWebSocket.prototype.close = function(code, reason) {\n        if (code === void 0) code = 1000;\n        this._closeCalled = true;\n        this._shouldReconnect = false;\n        this._clearTimeouts();\n        if (!this._ws) {\n            this._debug(\"close enqueued: no ws instance\");\n            return;\n        }\n        if (this._ws.readyState === this.CLOSED) {\n            this._debug(\"close: already closed\");\n            return;\n        }\n        this._ws.close(code, reason);\n    };\n    /**\r\n     * Closes the WebSocket connection or connection attempt and connects again.\r\n     * Resets retry counter;\r\n     */ ReconnectingWebSocket.prototype.reconnect = function(code, reason) {\n        this._shouldReconnect = true;\n        this._closeCalled = false;\n        this._retryCount = -1;\n        if (!this._ws || this._ws.readyState === this.CLOSED) this._connect();\n        else {\n            this._disconnect(code, reason);\n            this._connect();\n        }\n    };\n    /**\r\n     * Enqueue specified data to be transmitted to the server over the WebSocket connection\r\n     */ ReconnectingWebSocket.prototype.send = function(data) {\n        if (this._ws && this._ws.readyState === this.OPEN) {\n            this._debug(\"send\", data);\n            this._ws.send(data);\n        } else {\n            var _a = this._options.maxEnqueuedMessages, maxEnqueuedMessages = _a === void 0 ? $07f9bef39fe6830c$var$DEFAULT.maxEnqueuedMessages : _a;\n            if (this._messageQueue.length < maxEnqueuedMessages) {\n                this._debug(\"enqueue\", data);\n                this._messageQueue.push(data);\n            }\n        }\n    };\n    /**\r\n     * Register an event handler of a specific event type\r\n     */ ReconnectingWebSocket.prototype.addEventListener = function(type, listener) {\n        if (this._listeners[type]) // @ts-ignore\n        this._listeners[type].push(listener);\n    };\n    ReconnectingWebSocket.prototype.dispatchEvent = function(event) {\n        var e_1, _a;\n        var listeners = this._listeners[event.type];\n        if (listeners) try {\n            for(var listeners_1 = $07f9bef39fe6830c$var$__values(listeners), listeners_1_1 = listeners_1.next(); !listeners_1_1.done; listeners_1_1 = listeners_1.next()){\n                var listener = listeners_1_1.value;\n                this._callEventListener(event, listener);\n            }\n        } catch (e_1_1) {\n            e_1 = {\n                error: e_1_1\n            };\n        } finally{\n            try {\n                if (listeners_1_1 && !listeners_1_1.done && (_a = listeners_1.return)) _a.call(listeners_1);\n            } finally{\n                if (e_1) throw e_1.error;\n            }\n        }\n        return true;\n    };\n    /**\r\n     * Removes an event listener\r\n     */ ReconnectingWebSocket.prototype.removeEventListener = function(type, listener) {\n        if (this._listeners[type]) // @ts-ignore\n        this._listeners[type] = this._listeners[type].filter(function(l) {\n            return l !== listener;\n        });\n    };\n    ReconnectingWebSocket.prototype._debug = function() {\n        var args = [];\n        for(var _i = 0; _i < arguments.length; _i++)args[_i] = arguments[_i];\n        if (this._options.debug) // not using spread because compiled version uses Symbols\n        // tslint:disable-next-line\n        console.log.apply(console, $07f9bef39fe6830c$var$__spread([\n            \"RWS>\"\n        ], args));\n    };\n    ReconnectingWebSocket.prototype._getNextDelay = function() {\n        var _a = this._options, _b = _a.reconnectionDelayGrowFactor, reconnectionDelayGrowFactor = _b === void 0 ? $07f9bef39fe6830c$var$DEFAULT.reconnectionDelayGrowFactor : _b, _c = _a.minReconnectionDelay, minReconnectionDelay = _c === void 0 ? $07f9bef39fe6830c$var$DEFAULT.minReconnectionDelay : _c, _d = _a.maxReconnectionDelay, maxReconnectionDelay = _d === void 0 ? $07f9bef39fe6830c$var$DEFAULT.maxReconnectionDelay : _d;\n        var delay = 0;\n        if (this._retryCount > 0) {\n            delay = minReconnectionDelay * Math.pow(reconnectionDelayGrowFactor, this._retryCount - 1);\n            if (delay > maxReconnectionDelay) delay = maxReconnectionDelay;\n        }\n        this._debug(\"next delay\", delay);\n        return delay;\n    };\n    ReconnectingWebSocket.prototype._wait = function() {\n        var _this = this;\n        return new Promise(function(resolve) {\n            setTimeout(resolve, _this._getNextDelay());\n        });\n    };\n    ReconnectingWebSocket.prototype._getNextUrl = function(urlProvider) {\n        if (typeof urlProvider === \"string\") return Promise.resolve(urlProvider);\n        if (typeof urlProvider === \"function\") {\n            var url = urlProvider();\n            if (typeof url === \"string\") return Promise.resolve(url);\n            if (!!url.then) return url;\n        }\n        throw Error(\"Invalid URL\");\n    };\n    ReconnectingWebSocket.prototype._connect = function() {\n        var _this = this;\n        if (this._connectLock || !this._shouldReconnect) return;\n        this._connectLock = true;\n        var _a = this._options, _b = _a.maxRetries, maxRetries = _b === void 0 ? $07f9bef39fe6830c$var$DEFAULT.maxRetries : _b, _c = _a.connectionTimeout, connectionTimeout = _c === void 0 ? $07f9bef39fe6830c$var$DEFAULT.connectionTimeout : _c, _d = _a.WebSocket, WebSocket1 = _d === void 0 ? $07f9bef39fe6830c$var$getGlobalWebSocket() : _d;\n        if (this._retryCount >= maxRetries) {\n            this._debug(\"max retries reached\", this._retryCount, \">=\", maxRetries);\n            return;\n        }\n        this._retryCount++;\n        this._debug(\"connect\", this._retryCount);\n        this._removeListeners();\n        if (!$07f9bef39fe6830c$var$isWebSocket(WebSocket1)) throw Error(\"No valid WebSocket class provided\");\n        this._wait().then(function() {\n            return _this._getNextUrl(_this._url);\n        }).then(function(url) {\n            // close could be called before creating the ws\n            if (_this._closeCalled) return;\n            _this._debug(\"connect\", {\n                url: url,\n                protocols: _this._protocols\n            });\n            _this._ws = _this._protocols ? new WebSocket1(url, _this._protocols) : new WebSocket1(url);\n            _this._ws.binaryType = _this._binaryType;\n            _this._connectLock = false;\n            _this._addListeners();\n            _this._connectTimeout = setTimeout(function() {\n                return _this._handleTimeout();\n            }, connectionTimeout);\n        });\n    };\n    ReconnectingWebSocket.prototype._handleTimeout = function() {\n        this._debug(\"timeout event\");\n        this._handleError(new $07f9bef39fe6830c$var$ErrorEvent(Error(\"TIMEOUT\"), this));\n    };\n    ReconnectingWebSocket.prototype._disconnect = function(code, reason) {\n        if (code === void 0) code = 1000;\n        this._clearTimeouts();\n        if (!this._ws) return;\n        this._removeListeners();\n        try {\n            this._ws.close(code, reason);\n            this._handleClose(new $07f9bef39fe6830c$var$CloseEvent(code, reason, this));\n        } catch (error) {\n        // ignore\n        }\n    };\n    ReconnectingWebSocket.prototype._acceptOpen = function() {\n        this._debug(\"accept open\");\n        this._retryCount = 0;\n    };\n    ReconnectingWebSocket.prototype._callEventListener = function(event, listener) {\n        if (\"handleEvent\" in listener) // @ts-ignore\n        listener.handleEvent(event);\n        else // @ts-ignore\n        listener(event);\n    };\n    ReconnectingWebSocket.prototype._removeListeners = function() {\n        if (!this._ws) return;\n        this._debug(\"removeListeners\");\n        this._ws.removeEventListener(\"open\", this._handleOpen);\n        this._ws.removeEventListener(\"close\", this._handleClose);\n        this._ws.removeEventListener(\"message\", this._handleMessage);\n        // @ts-ignore\n        this._ws.removeEventListener(\"error\", this._handleError);\n    };\n    ReconnectingWebSocket.prototype._addListeners = function() {\n        if (!this._ws) return;\n        this._debug(\"addListeners\");\n        this._ws.addEventListener(\"open\", this._handleOpen);\n        this._ws.addEventListener(\"close\", this._handleClose);\n        this._ws.addEventListener(\"message\", this._handleMessage);\n        // @ts-ignore\n        this._ws.addEventListener(\"error\", this._handleError);\n    };\n    ReconnectingWebSocket.prototype._clearTimeouts = function() {\n        clearTimeout(this._connectTimeout);\n        clearTimeout(this._uptimeTimeout);\n    };\n    return ReconnectingWebSocket;\n}();\nvar $07f9bef39fe6830c$export$2e2bcd8739ae039 = $07f9bef39fe6830c$var$ReconnectingWebSocket;\n\n\nclass $c2848ebcf924d7cd$var$Board {\n    constructor(element, boardID){\n        this.element = element;\n        this.boardID = boardID;\n        this.objects = [];\n        this.onSocketMessage = (event)=>{\n            const data = event.data;\n            const payload = JSON.parse(data);\n            console.log(payload.type);\n            if (payload.type === \"INITIAL_DATA\") {\n                console.log(payload.data);\n                this.objects = payload.data.objects;\n                this.draw();\n                this.getOnlineUsers();\n            } else if (payload.type === \"ADD_OBJECT\") {\n                this.objects.push(payload.data.object);\n                this.draw();\n                this.getOnlineUsers();\n            } else if (payload.type === \"GET_ONLINE_USERS_RESPONSE\") {\n                this.online_users = payload.data.online_users;\n                this.updateUserCount();\n            }\n        };\n        this.getOnlineUsers = ()=>{\n            if (this.socket.readyState === (0, $07f9bef39fe6830c$export$2e2bcd8739ae039).OPEN) this.socket.send(JSON.stringify({\n                type: \"GET_USERS\"\n            }));\n        };\n        this.onSocketClose = (event)=>{\n            this.getOnlineUsers();\n        };\n        this.sendBoardObject = (obj)=>{\n            this.socket.send(JSON.stringify({\n                type: \"ADD_OBJECT\",\n                data: {\n                    object: this.currentDrawingObject\n                }\n            }));\n        };\n        this.onMouseDown = (event)=>{\n            const x = event.clientX - this.elementPosition[0];\n            const y = event.clientY - this.elementPosition[1];\n            this.currentDrawingObject = {\n                type: \"path\",\n                points: [\n                    [\n                        x,\n                        y\n                    ]\n                ]\n            };\n            this.draw();\n        };\n        this.onMouseUp = ()=>{\n            if (this.currentDrawingObject) {\n                this.objects.push(this.currentDrawingObject);\n                this.sendBoardObject(this.currentDrawingObject);\n                this.currentDrawingObject = undefined;\n                this.draw();\n                this.getOnlineUsers();\n            }\n        };\n        this.onMouseMove = (event)=>{\n            const x = event.clientX - this.elementPosition[0];\n            const y = event.clientY - this.elementPosition[1];\n            if (!this.currentDrawingObject) return;\n            if (this.currentDrawingObject.type === \"path\") this.currentDrawingObject.points.push([\n                x,\n                y\n            ]);\n            this.draw();\n        };\n        this.updateUserCount = ()=>{\n            let user_count = String(this.online_users?.length || 0);\n            console.log(user_count);\n            let doc_element = document.getElementById(\"show_users_count\");\n            if (doc_element) doc_element.innerText = user_count;\n        };\n        this.draw = ()=>{\n            const { context: context, element: element } = this;\n            const { width: width, height: height } = element.getBoundingClientRect();\n            this.context.clearRect(0, 0, width, height);\n            for (const obj of this.objects)this.boardObject(obj);\n            if (this.currentDrawingObject) this.boardObject(this.currentDrawingObject);\n        };\n        this.boardObject = (obj)=>{\n            if (obj.type === \"path\") this.boardPath(obj);\n        };\n        this.boardPath = (obj)=>{\n            // console.log(obj)\n            if (obj.points.length === 0) return;\n            const context = this.context;\n            context.beginPath();\n            context.strokeStyle = \"black\";\n            context.lineWidth = 1;\n            const firstPoint = obj.points[0];\n            const rest = obj.points.slice(1);\n            context.moveTo(firstPoint[0], firstPoint[1]);\n            for (const point of rest){\n                const [x, y] = point;\n                context.lineTo(x, y);\n            }\n            context.stroke();\n            context.closePath();\n        };\n        this.run = ()=>{\n            this.element.addEventListener(\"mousedown\", this.onMouseDown);\n            this.element.addEventListener(\"mouseup\", this.onMouseUp);\n            this.element.addEventListener(\"mousemove\", this.onMouseMove);\n            this.element.addEventListener(\"mouseleave\", this.onMouseUp);\n            this.draw();\n        };\n        this.boardID = boardID;\n        const context = element.getContext(\"2d\");\n        if (context) {\n            this.context = context;\n            const { x: x, y: y } = element.getBoundingClientRect();\n            this.elementPosition = [\n                x,\n                y\n            ];\n        } else throw new Error(\"Failed to get 2D context for the canvas element.\");\n        const scheme = window.location.protocol === \"http:\" ? \"ws\" : \"wss\";\n        this.socket = new (0, $07f9bef39fe6830c$export$2e2bcd8739ae039)(`${scheme}://${window.location.host}/board/${this.boardID}`);\n        this.socket.addEventListener(\"message\", this.onSocketMessage);\n        this.socket.addEventListener(\"close\", this.onSocketClose);\n    }\n}\nconst $c2848ebcf924d7cd$var$element = document.getElementById(\"whiteboard\");\nconst $c2848ebcf924d7cd$var$board = new $c2848ebcf924d7cd$var$Board($c2848ebcf924d7cd$var$element, window.boardID);\n$c2848ebcf924d7cd$var$board.run();\n\n})();\n//# sourceMappingURL=index.js.map\n","import ReconnectingWebSocket from \"reconnecting-websocket\";\r\n\r\ntype Point = [number, number];\r\n\r\ntype BoardPath = {\r\n\ttype: \"path\";\r\n\tpoints: Point[];\r\n};\r\n\r\ntype BoardObject = BoardPath;\r\ntype OnlineUsers = string[];\r\n\r\ntype ReceivedWebsocketMessage =\r\n\t| {\r\n\t\t\ttype: \"INITIAL_DATA\";\r\n\t\t\tdata: {\r\n\t\t\t\tobjects: BoardObject[];\r\n\t\t\t};\r\n\t  }\r\n\t| {\r\n\t\t\ttype: \"ADD_OBJECT\";\r\n\t\t\tdata: {\r\n\t\t\t\tobject: BoardObject;\r\n\t\t\t};\r\n\t  }\r\n\t| {\r\n\t\t\ttype: \"GET_ONLINE_USERS_RESPONSE\";\r\n\t\t\tdata: {\r\n\t\t\t\tonline_users: OnlineUsers;\r\n\t\t\t};\r\n\t  };\r\nclass Board {\r\n\tobjects: BoardObject[] = [];\r\n\tcurrentDrawingObject?: BoardObject;\r\n\tcontext: CanvasRenderingContext2D;\r\n\telementPosition: Point;\r\n\tsocket: ReconnectingWebSocket;\r\n\tonline_users: OnlineUsers;\r\n\r\n\tconstructor(private element: HTMLCanvasElement, private boardID: string) {\r\n\t\tthis.boardID = boardID;\r\n\t\tconst context = element.getContext(\"2d\");\r\n\t\tif (context) {\r\n\t\t\tthis.context = context;\r\n\t\t\tconst { x, y } = element.getBoundingClientRect();\r\n\t\t\tthis.elementPosition = [x, y];\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Failed to get 2D context for the canvas element.\");\r\n\t\t}\r\n\t\tconst scheme = window.location.protocol === \"http:\" ? \"ws\" : \"wss\";\r\n\t\tthis.socket = new ReconnectingWebSocket(\r\n\t\t\t`${scheme}://${window.location.host}/board/${this.boardID}`\r\n\t\t);\r\n\t\tthis.socket.addEventListener(\"message\", this.onSocketMessage);\r\n\t\tthis.socket.addEventListener(\"close\", this.onSocketClose);\r\n\t}\r\n\r\n\tonSocketMessage = (event: MessageEvent) => {\r\n\t\tconst data = event.data;\r\n\t\tconst payload = JSON.parse(data) as ReceivedWebsocketMessage;\r\n\t\tconsole.log(payload.type);\r\n\t\t\r\n\t\tif (payload.type === \"INITIAL_DATA\") {\r\n\t\t\tconsole.log(payload.data);\r\n\t\t\tthis.objects = payload.data.objects;\r\n\t\t\tthis.draw();\r\n\t\t\tthis.getOnlineUsers();\r\n\r\n\t\t} else if (payload.type === \"ADD_OBJECT\") {\r\n\t\t\tthis.objects.push(payload.data.object);\r\n\t\t\tthis.draw();\r\n\t\t\tthis.getOnlineUsers();\r\n\r\n\t\t} else if (payload.type === \"GET_ONLINE_USERS_RESPONSE\") {\r\n\t\t\tthis.online_users = payload.data.online_users;\r\n\t\t\tthis.updateUserCount();\r\n\t\t}\r\n\t};\r\n\tgetOnlineUsers = () => {\r\n\t\tif (this.socket.readyState === ReconnectingWebSocket.OPEN) {\r\n\t\t\tthis.socket.send(\r\n\t\t\t\tJSON.stringify({\r\n\t\t\t\t\ttype: \"GET_USERS\",\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\tonSocketClose = (event: any) => {\r\n\t\tthis.getOnlineUsers();\r\n\t};\r\n\r\n\tsendBoardObject = (obj: BoardObject) => {\r\n\t\tthis.socket.send(\r\n\t\t\tJSON.stringify({\r\n\t\t\t\ttype: \"ADD_OBJECT\",\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tobject: this.currentDrawingObject,\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t);\r\n\t};\r\n\tonMouseDown = (event: MouseEvent) => {\r\n\t\tconst x = event.clientX - this.elementPosition[0];\r\n\t\tconst y = event.clientY - this.elementPosition[1];\r\n\r\n\t\tthis.currentDrawingObject = {\r\n\t\t\ttype: \"path\",\r\n\t\t\tpoints: [[x, y]],\r\n\t\t};\r\n\t\tthis.draw();\r\n\t};\r\n\tonMouseUp = () => {\r\n\t\tif (this.currentDrawingObject) {\r\n\t\t\tthis.objects.push(this.currentDrawingObject);\r\n\t\t\tthis.sendBoardObject(this.currentDrawingObject);\r\n\t\t\tthis.currentDrawingObject = undefined;\r\n\t\t\tthis.draw();\r\n\t\t\tthis.getOnlineUsers();\r\n\t\t}\r\n\t};\r\n\tonMouseMove = (event: MouseEvent) => {\r\n\t\tconst x = event.clientX - this.elementPosition[0];\r\n\t\tconst y = event.clientY - this.elementPosition[1];\r\n\t\tif (!this.currentDrawingObject) return;\r\n\t\tif (this.currentDrawingObject.type === \"path\") {\r\n\t\t\tthis.currentDrawingObject.points.push([x, y]);\r\n\t\t}\r\n\t\tthis.draw();\r\n\t};\r\n\tupdateUserCount = () => {\r\n\t\tlet user_count = String(this.online_users?.length || 0);\r\n\t\tconsole.log(user_count);\r\n\t\tlet doc_element = document.getElementById(\"show_users_count\");\r\n\t\tif (doc_element) {\r\n\t\t\tdoc_element.innerText = user_count;\r\n\t\t}\r\n\t};\r\n\tdraw = () => {\r\n\t\tconst { context, element } = this;\r\n\t\tconst { width, height } = element.getBoundingClientRect();\r\n\r\n\t\tthis.context.clearRect(0, 0, width, height);\r\n\t\tfor (const obj of this.objects) {\r\n\t\t\tthis.boardObject(obj);\r\n\t\t}\r\n\t\tif (this.currentDrawingObject) {\r\n\t\t\tthis.boardObject(this.currentDrawingObject);\r\n\t\t}\r\n\t};\r\n\r\n\tboardObject = (obj: BoardObject) => {\r\n\t\tif (obj.type === \"path\") {\r\n\t\t\tthis.boardPath(obj);\r\n\t\t}\r\n\t};\r\n\tboardPath = (obj: BoardPath) => {\r\n\t\t// console.log(obj)\r\n\t\tif (obj.points.length === 0) return;\r\n\t\tconst context = this.context;\r\n\t\tcontext.beginPath();\r\n\t\tcontext.strokeStyle = \"black\";\r\n\t\tcontext.lineWidth = 1;\r\n\t\tconst firstPoint = obj.points[0];\r\n\t\tconst rest = obj.points.slice(1);\r\n\t\tcontext.moveTo(firstPoint[0], firstPoint[1]);\r\n\r\n\t\tfor (const point of rest) {\r\n\t\t\tconst [x, y] = point;\r\n\t\t\tcontext.lineTo(x, y);\r\n\t\t}\r\n\t\tcontext.stroke();\r\n\t\tcontext.closePath();\r\n\t};\r\n\trun = () => {\r\n\t\tthis.element.addEventListener(\"mousedown\", this.onMouseDown);\r\n\t\tthis.element.addEventListener(\"mouseup\", this.onMouseUp);\r\n\t\tthis.element.addEventListener(\"mousemove\", this.onMouseMove);\r\n\t\tthis.element.addEventListener(\"mouseleave\", this.onMouseUp);\r\n\t\tthis.draw();\r\n\t};\r\n}\r\nconst element = document.getElementById(\"whiteboard\") as HTMLCanvasElement;\r\nconst board = new Board(element, (window as any).boardID);\r\nboard.run();\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nfunction __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\n\nvar Event = /** @class */ (function () {\r\n    function Event(type, target) {\r\n        this.target = target;\r\n        this.type = type;\r\n    }\r\n    return Event;\r\n}());\r\nvar ErrorEvent = /** @class */ (function (_super) {\r\n    __extends(ErrorEvent, _super);\r\n    function ErrorEvent(error, target) {\r\n        var _this = _super.call(this, 'error', target) || this;\r\n        _this.message = error.message;\r\n        _this.error = error;\r\n        return _this;\r\n    }\r\n    return ErrorEvent;\r\n}(Event));\r\nvar CloseEvent = /** @class */ (function (_super) {\r\n    __extends(CloseEvent, _super);\r\n    function CloseEvent(code, reason, target) {\r\n        if (code === void 0) { code = 1000; }\r\n        if (reason === void 0) { reason = ''; }\r\n        var _this = _super.call(this, 'close', target) || this;\r\n        _this.wasClean = true;\r\n        _this.code = code;\r\n        _this.reason = reason;\r\n        return _this;\r\n    }\r\n    return CloseEvent;\r\n}(Event));\n\n/*!\r\n * Reconnecting WebSocket\r\n * by Pedro Ladaria <pedro.ladaria@gmail.com>\r\n * https://github.com/pladaria/reconnecting-websocket\r\n * License MIT\r\n */\r\nvar getGlobalWebSocket = function () {\r\n    if (typeof WebSocket !== 'undefined') {\r\n        // @ts-ignore\r\n        return WebSocket;\r\n    }\r\n};\r\n/**\r\n * Returns true if given argument looks like a WebSocket class\r\n */\r\nvar isWebSocket = function (w) { return typeof w !== 'undefined' && !!w && w.CLOSING === 2; };\r\nvar DEFAULT = {\r\n    maxReconnectionDelay: 10000,\r\n    minReconnectionDelay: 1000 + Math.random() * 4000,\r\n    minUptime: 5000,\r\n    reconnectionDelayGrowFactor: 1.3,\r\n    connectionTimeout: 4000,\r\n    maxRetries: Infinity,\r\n    maxEnqueuedMessages: Infinity,\r\n    startClosed: false,\r\n    debug: false,\r\n};\r\nvar ReconnectingWebSocket = /** @class */ (function () {\r\n    function ReconnectingWebSocket(url, protocols, options) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        this._listeners = {\r\n            error: [],\r\n            message: [],\r\n            open: [],\r\n            close: [],\r\n        };\r\n        this._retryCount = -1;\r\n        this._shouldReconnect = true;\r\n        this._connectLock = false;\r\n        this._binaryType = 'blob';\r\n        this._closeCalled = false;\r\n        this._messageQueue = [];\r\n        /**\r\n         * An event listener to be called when the WebSocket connection's readyState changes to CLOSED\r\n         */\r\n        this.onclose = null;\r\n        /**\r\n         * An event listener to be called when an error occurs\r\n         */\r\n        this.onerror = null;\r\n        /**\r\n         * An event listener to be called when a message is received from the server\r\n         */\r\n        this.onmessage = null;\r\n        /**\r\n         * An event listener to be called when the WebSocket connection's readyState changes to OPEN;\r\n         * this indicates that the connection is ready to send and receive data\r\n         */\r\n        this.onopen = null;\r\n        this._handleOpen = function (event) {\r\n            _this._debug('open event');\r\n            var _a = _this._options.minUptime, minUptime = _a === void 0 ? DEFAULT.minUptime : _a;\r\n            clearTimeout(_this._connectTimeout);\r\n            _this._uptimeTimeout = setTimeout(function () { return _this._acceptOpen(); }, minUptime);\r\n            _this._ws.binaryType = _this._binaryType;\r\n            // send enqueued messages (messages sent before websocket open event)\r\n            _this._messageQueue.forEach(function (message) { return _this._ws.send(message); });\r\n            _this._messageQueue = [];\r\n            if (_this.onopen) {\r\n                _this.onopen(event);\r\n            }\r\n            _this._listeners.open.forEach(function (listener) { return _this._callEventListener(event, listener); });\r\n        };\r\n        this._handleMessage = function (event) {\r\n            _this._debug('message event');\r\n            if (_this.onmessage) {\r\n                _this.onmessage(event);\r\n            }\r\n            _this._listeners.message.forEach(function (listener) { return _this._callEventListener(event, listener); });\r\n        };\r\n        this._handleError = function (event) {\r\n            _this._debug('error event', event.message);\r\n            _this._disconnect(undefined, event.message === 'TIMEOUT' ? 'timeout' : undefined);\r\n            if (_this.onerror) {\r\n                _this.onerror(event);\r\n            }\r\n            _this._debug('exec error listeners');\r\n            _this._listeners.error.forEach(function (listener) { return _this._callEventListener(event, listener); });\r\n            _this._connect();\r\n        };\r\n        this._handleClose = function (event) {\r\n            _this._debug('close event');\r\n            _this._clearTimeouts();\r\n            if (_this._shouldReconnect) {\r\n                _this._connect();\r\n            }\r\n            if (_this.onclose) {\r\n                _this.onclose(event);\r\n            }\r\n            _this._listeners.close.forEach(function (listener) { return _this._callEventListener(event, listener); });\r\n        };\r\n        this._url = url;\r\n        this._protocols = protocols;\r\n        this._options = options;\r\n        if (this._options.startClosed) {\r\n            this._shouldReconnect = false;\r\n        }\r\n        this._connect();\r\n    }\r\n    Object.defineProperty(ReconnectingWebSocket, \"CONNECTING\", {\r\n        get: function () {\r\n            return 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket, \"OPEN\", {\r\n        get: function () {\r\n            return 1;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket, \"CLOSING\", {\r\n        get: function () {\r\n            return 2;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket, \"CLOSED\", {\r\n        get: function () {\r\n            return 3;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"CONNECTING\", {\r\n        get: function () {\r\n            return ReconnectingWebSocket.CONNECTING;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"OPEN\", {\r\n        get: function () {\r\n            return ReconnectingWebSocket.OPEN;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"CLOSING\", {\r\n        get: function () {\r\n            return ReconnectingWebSocket.CLOSING;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"CLOSED\", {\r\n        get: function () {\r\n            return ReconnectingWebSocket.CLOSED;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"binaryType\", {\r\n        get: function () {\r\n            return this._ws ? this._ws.binaryType : this._binaryType;\r\n        },\r\n        set: function (value) {\r\n            this._binaryType = value;\r\n            if (this._ws) {\r\n                this._ws.binaryType = value;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"retryCount\", {\r\n        /**\r\n         * Returns the number or connection retries\r\n         */\r\n        get: function () {\r\n            return Math.max(this._retryCount, 0);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"bufferedAmount\", {\r\n        /**\r\n         * The number of bytes of data that have been queued using calls to send() but not yet\r\n         * transmitted to the network. This value resets to zero once all queued data has been sent.\r\n         * This value does not reset to zero when the connection is closed; if you keep calling send(),\r\n         * this will continue to climb. Read only\r\n         */\r\n        get: function () {\r\n            var bytes = this._messageQueue.reduce(function (acc, message) {\r\n                if (typeof message === 'string') {\r\n                    acc += message.length; // not byte size\r\n                }\r\n                else if (message instanceof Blob) {\r\n                    acc += message.size;\r\n                }\r\n                else {\r\n                    acc += message.byteLength;\r\n                }\r\n                return acc;\r\n            }, 0);\r\n            return bytes + (this._ws ? this._ws.bufferedAmount : 0);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"extensions\", {\r\n        /**\r\n         * The extensions selected by the server. This is currently only the empty string or a list of\r\n         * extensions as negotiated by the connection\r\n         */\r\n        get: function () {\r\n            return this._ws ? this._ws.extensions : '';\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"protocol\", {\r\n        /**\r\n         * A string indicating the name of the sub-protocol the server selected;\r\n         * this will be one of the strings specified in the protocols parameter when creating the\r\n         * WebSocket object\r\n         */\r\n        get: function () {\r\n            return this._ws ? this._ws.protocol : '';\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"readyState\", {\r\n        /**\r\n         * The current state of the connection; this is one of the Ready state constants\r\n         */\r\n        get: function () {\r\n            if (this._ws) {\r\n                return this._ws.readyState;\r\n            }\r\n            return this._options.startClosed\r\n                ? ReconnectingWebSocket.CLOSED\r\n                : ReconnectingWebSocket.CONNECTING;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"url\", {\r\n        /**\r\n         * The URL as resolved by the constructor\r\n         */\r\n        get: function () {\r\n            return this._ws ? this._ws.url : '';\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Closes the WebSocket connection or connection attempt, if any. If the connection is already\r\n     * CLOSED, this method does nothing\r\n     */\r\n    ReconnectingWebSocket.prototype.close = function (code, reason) {\r\n        if (code === void 0) { code = 1000; }\r\n        this._closeCalled = true;\r\n        this._shouldReconnect = false;\r\n        this._clearTimeouts();\r\n        if (!this._ws) {\r\n            this._debug('close enqueued: no ws instance');\r\n            return;\r\n        }\r\n        if (this._ws.readyState === this.CLOSED) {\r\n            this._debug('close: already closed');\r\n            return;\r\n        }\r\n        this._ws.close(code, reason);\r\n    };\r\n    /**\r\n     * Closes the WebSocket connection or connection attempt and connects again.\r\n     * Resets retry counter;\r\n     */\r\n    ReconnectingWebSocket.prototype.reconnect = function (code, reason) {\r\n        this._shouldReconnect = true;\r\n        this._closeCalled = false;\r\n        this._retryCount = -1;\r\n        if (!this._ws || this._ws.readyState === this.CLOSED) {\r\n            this._connect();\r\n        }\r\n        else {\r\n            this._disconnect(code, reason);\r\n            this._connect();\r\n        }\r\n    };\r\n    /**\r\n     * Enqueue specified data to be transmitted to the server over the WebSocket connection\r\n     */\r\n    ReconnectingWebSocket.prototype.send = function (data) {\r\n        if (this._ws && this._ws.readyState === this.OPEN) {\r\n            this._debug('send', data);\r\n            this._ws.send(data);\r\n        }\r\n        else {\r\n            var _a = this._options.maxEnqueuedMessages, maxEnqueuedMessages = _a === void 0 ? DEFAULT.maxEnqueuedMessages : _a;\r\n            if (this._messageQueue.length < maxEnqueuedMessages) {\r\n                this._debug('enqueue', data);\r\n                this._messageQueue.push(data);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Register an event handler of a specific event type\r\n     */\r\n    ReconnectingWebSocket.prototype.addEventListener = function (type, listener) {\r\n        if (this._listeners[type]) {\r\n            // @ts-ignore\r\n            this._listeners[type].push(listener);\r\n        }\r\n    };\r\n    ReconnectingWebSocket.prototype.dispatchEvent = function (event) {\r\n        var e_1, _a;\r\n        var listeners = this._listeners[event.type];\r\n        if (listeners) {\r\n            try {\r\n                for (var listeners_1 = __values(listeners), listeners_1_1 = listeners_1.next(); !listeners_1_1.done; listeners_1_1 = listeners_1.next()) {\r\n                    var listener = listeners_1_1.value;\r\n                    this._callEventListener(event, listener);\r\n                }\r\n            }\r\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n            finally {\r\n                try {\r\n                    if (listeners_1_1 && !listeners_1_1.done && (_a = listeners_1.return)) _a.call(listeners_1);\r\n                }\r\n                finally { if (e_1) throw e_1.error; }\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * Removes an event listener\r\n     */\r\n    ReconnectingWebSocket.prototype.removeEventListener = function (type, listener) {\r\n        if (this._listeners[type]) {\r\n            // @ts-ignore\r\n            this._listeners[type] = this._listeners[type].filter(function (l) { return l !== listener; });\r\n        }\r\n    };\r\n    ReconnectingWebSocket.prototype._debug = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        if (this._options.debug) {\r\n            // not using spread because compiled version uses Symbols\r\n            // tslint:disable-next-line\r\n            console.log.apply(console, __spread(['RWS>'], args));\r\n        }\r\n    };\r\n    ReconnectingWebSocket.prototype._getNextDelay = function () {\r\n        var _a = this._options, _b = _a.reconnectionDelayGrowFactor, reconnectionDelayGrowFactor = _b === void 0 ? DEFAULT.reconnectionDelayGrowFactor : _b, _c = _a.minReconnectionDelay, minReconnectionDelay = _c === void 0 ? DEFAULT.minReconnectionDelay : _c, _d = _a.maxReconnectionDelay, maxReconnectionDelay = _d === void 0 ? DEFAULT.maxReconnectionDelay : _d;\r\n        var delay = 0;\r\n        if (this._retryCount > 0) {\r\n            delay =\r\n                minReconnectionDelay * Math.pow(reconnectionDelayGrowFactor, this._retryCount - 1);\r\n            if (delay > maxReconnectionDelay) {\r\n                delay = maxReconnectionDelay;\r\n            }\r\n        }\r\n        this._debug('next delay', delay);\r\n        return delay;\r\n    };\r\n    ReconnectingWebSocket.prototype._wait = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve) {\r\n            setTimeout(resolve, _this._getNextDelay());\r\n        });\r\n    };\r\n    ReconnectingWebSocket.prototype._getNextUrl = function (urlProvider) {\r\n        if (typeof urlProvider === 'string') {\r\n            return Promise.resolve(urlProvider);\r\n        }\r\n        if (typeof urlProvider === 'function') {\r\n            var url = urlProvider();\r\n            if (typeof url === 'string') {\r\n                return Promise.resolve(url);\r\n            }\r\n            if (!!url.then) {\r\n                return url;\r\n            }\r\n        }\r\n        throw Error('Invalid URL');\r\n    };\r\n    ReconnectingWebSocket.prototype._connect = function () {\r\n        var _this = this;\r\n        if (this._connectLock || !this._shouldReconnect) {\r\n            return;\r\n        }\r\n        this._connectLock = true;\r\n        var _a = this._options, _b = _a.maxRetries, maxRetries = _b === void 0 ? DEFAULT.maxRetries : _b, _c = _a.connectionTimeout, connectionTimeout = _c === void 0 ? DEFAULT.connectionTimeout : _c, _d = _a.WebSocket, WebSocket = _d === void 0 ? getGlobalWebSocket() : _d;\r\n        if (this._retryCount >= maxRetries) {\r\n            this._debug('max retries reached', this._retryCount, '>=', maxRetries);\r\n            return;\r\n        }\r\n        this._retryCount++;\r\n        this._debug('connect', this._retryCount);\r\n        this._removeListeners();\r\n        if (!isWebSocket(WebSocket)) {\r\n            throw Error('No valid WebSocket class provided');\r\n        }\r\n        this._wait()\r\n            .then(function () { return _this._getNextUrl(_this._url); })\r\n            .then(function (url) {\r\n            // close could be called before creating the ws\r\n            if (_this._closeCalled) {\r\n                return;\r\n            }\r\n            _this._debug('connect', { url: url, protocols: _this._protocols });\r\n            _this._ws = _this._protocols\r\n                ? new WebSocket(url, _this._protocols)\r\n                : new WebSocket(url);\r\n            _this._ws.binaryType = _this._binaryType;\r\n            _this._connectLock = false;\r\n            _this._addListeners();\r\n            _this._connectTimeout = setTimeout(function () { return _this._handleTimeout(); }, connectionTimeout);\r\n        });\r\n    };\r\n    ReconnectingWebSocket.prototype._handleTimeout = function () {\r\n        this._debug('timeout event');\r\n        this._handleError(new ErrorEvent(Error('TIMEOUT'), this));\r\n    };\r\n    ReconnectingWebSocket.prototype._disconnect = function (code, reason) {\r\n        if (code === void 0) { code = 1000; }\r\n        this._clearTimeouts();\r\n        if (!this._ws) {\r\n            return;\r\n        }\r\n        this._removeListeners();\r\n        try {\r\n            this._ws.close(code, reason);\r\n            this._handleClose(new CloseEvent(code, reason, this));\r\n        }\r\n        catch (error) {\r\n            // ignore\r\n        }\r\n    };\r\n    ReconnectingWebSocket.prototype._acceptOpen = function () {\r\n        this._debug('accept open');\r\n        this._retryCount = 0;\r\n    };\r\n    ReconnectingWebSocket.prototype._callEventListener = function (event, listener) {\r\n        if ('handleEvent' in listener) {\r\n            // @ts-ignore\r\n            listener.handleEvent(event);\r\n        }\r\n        else {\r\n            // @ts-ignore\r\n            listener(event);\r\n        }\r\n    };\r\n    ReconnectingWebSocket.prototype._removeListeners = function () {\r\n        if (!this._ws) {\r\n            return;\r\n        }\r\n        this._debug('removeListeners');\r\n        this._ws.removeEventListener('open', this._handleOpen);\r\n        this._ws.removeEventListener('close', this._handleClose);\r\n        this._ws.removeEventListener('message', this._handleMessage);\r\n        // @ts-ignore\r\n        this._ws.removeEventListener('error', this._handleError);\r\n    };\r\n    ReconnectingWebSocket.prototype._addListeners = function () {\r\n        if (!this._ws) {\r\n            return;\r\n        }\r\n        this._debug('addListeners');\r\n        this._ws.addEventListener('open', this._handleOpen);\r\n        this._ws.addEventListener('close', this._handleClose);\r\n        this._ws.addEventListener('message', this._handleMessage);\r\n        // @ts-ignore\r\n        this._ws.addEventListener('error', this._handleError);\r\n    };\r\n    ReconnectingWebSocket.prototype._clearTimeouts = function () {\r\n        clearTimeout(this._connectTimeout);\r\n        clearTimeout(this._uptimeTimeout);\r\n    };\r\n    return ReconnectingWebSocket;\r\n}());\n\nexport default ReconnectingWebSocket;\n"],"names":["$07f9bef39fe6830c$var$extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","$07f9bef39fe6830c$var$__extends","__","constructor","prototype","create","$07f9bef39fe6830c$var$Event","type","target","$07f9bef39fe6830c$var$ErrorEvent","_super","ErrorEvent","error","_this","call","message","$07f9bef39fe6830c$var$CloseEvent","CloseEvent","code","reason","wasClean","$07f9bef39fe6830c$var$getGlobalWebSocket","WebSocket","$07f9bef39fe6830c$var$DEFAULT","maxReconnectionDelay","minReconnectionDelay","Math","random","minUptime","reconnectionDelayGrowFactor","connectionTimeout","maxRetries","Infinity","maxEnqueuedMessages","$07f9bef39fe6830c$var$ReconnectingWebSocket","ReconnectingWebSocket","url","protocols","options","_listeners","open","close","_retryCount","_shouldReconnect","_connectLock","_binaryType","_closeCalled","_messageQueue","onclose","onerror","onmessage","onopen","_handleOpen","event","_debug","_a","_options","clearTimeout","_connectTimeout","_uptimeTimeout","setTimeout","_acceptOpen","_ws","binaryType","forEach","send","listener","_callEventListener","_handleMessage","_handleError","_disconnect","undefined","_connect","_handleClose","_clearTimeouts","_url","_protocols","startClosed","defineProperty","get","enumerable","configurable","CONNECTING","OPEN","CLOSING","CLOSED","set","value","max","bytes","reduce","acc","length","Blob","size","byteLength","bufferedAmount","extensions","protocol","readyState","reconnect","data","push","addEventListener","dispatchEvent","e_1","listeners","o","m","i","listeners_1","Symbol","iterator","next","done","listeners_1_1","e_1_1","return","removeEventListener","filter","l","args","_i","arguments","debug","console","log","apply","$07f9bef39fe6830c$var$__spread","ar","concat","$07f9bef39fe6830c$var$__read","n","r","e","_getNextDelay","_b","_c","_d","delay","pow","_wait","Promise","resolve","_getNextUrl","urlProvider","then","Error","WebSocket1","_removeListeners","w","_addListeners","_handleTimeout","handleEvent","$c2848ebcf924d7cd$var$element","document","getElementById","$c2848ebcf924d7cd$var$board","element","boardID","objects","onSocketMessage","payload","JSON","parse","draw","getOnlineUsers","object","online_users","updateUserCount","socket","stringify","onSocketClose","sendBoardObject","obj","currentDrawingObject","onMouseDown","x","clientX","elementPosition","y","clientY","points","onMouseUp","onMouseMove","user_count","String","doc_element","innerText","context","width","height","getBoundingClientRect","clearRect","boardObject","boardPath","beginPath","strokeStyle","lineWidth","firstPoint","rest","slice","point","moveTo","lineTo","stroke","closePath","run","getContext","scheme","window","location","host"],"version":3,"file":"index.js.map"}